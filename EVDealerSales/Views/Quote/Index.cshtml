@using EVDealerSales.BO.DTOs.QuoteDTOs
@using EVDealerSales.BO.Enums
@using EVDealerSales.Services.Utils
@model Pagination<QuoteListDto>

@{
    ViewData["Title"] = "Quotes";
}

<link rel="stylesheet" href="~/css/employee.css" />
<link rel="stylesheet" href="~/css/quote.css" />


<div class="employee-container">
    <div class="container-fluid">
        <div class="employee-header">
            <div class="d-flex justify-content-between align-items-start">
                <div>
                    <h1>
                        <i class="fas fa-file-invoice-dollar"></i>
                        Quotes
                    </h1>
                    <p style="color: #666; margin: 0.5rem 0 0 0; font-size: 0.875rem;">
                        Manage customer quotes and pricing
                    </p>
                </div>
                <div>
                    <a asp-action="Create" class="btn-modern">
                        <i class="fas fa-plus"></i> Create Quote
                    </a>
                </div>
            </div>
        </div>

        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success" style="background: rgba(0, 170, 0, 0.1); border: 1px solid rgba(0, 170, 0, 0.3); color: #0a0; border-radius: 8px; padding: 1rem; margin-bottom: 1rem;">
                @TempData["SuccessMessage"]
            </div>
        }
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger" style="background: rgba(238, 0, 0, 0.1); border: 1px solid rgba(238, 0, 0, 0.3); color: #e00; border-radius: 8px; padding: 1rem; margin-bottom: 1rem;">
                @TempData["ErrorMessage"]
            </div>
        }

        <form method="get" asp-action="Index">
            <div class="search-bar">
                <input type="text" name="searchTerm" value="@ViewBag.SearchTerm" class="search-input" placeholder="Search by customer or vehicle..." />
                <button type="submit" class="btn-modern" style="white-space: nowrap;">
                    <i class="fas fa-search"></i> Search
                </button>
            </div>
        </form>

        @if (Model != null && Model.Any())
        {
            var groupedByCustomer = Model.GroupBy(q => q.CustomerName).ToList();

            <div class="quotes-grid">
                @foreach (var customerGroup in groupedByCustomer)
                {
                    var customerName = customerGroup.Key;
                    var quoteCount = customerGroup.Count();

                    <div class="customer-group-card">
                        <div class="customer-group-header" onclick="toggleCustomerGroup(this)">
                            <div class="customer-info-header">
                                <h3 class="customer-name-header">
                                    <i class="fas fa-user-circle"></i>
                                    @customerName
                                </h3>
                                <div class="quotes-count">
                                    <span class="badge">@quoteCount</span>
                                    <span>@(quoteCount == 1 ? "Quote" : "Quotes")</span>
                                </div>
                            </div>
                            <div class="expand-icon">
                                <i class="fas fa-chevron-down"></i>
                            </div>
                        </div>

                        <div class="quotes-list">
                            @foreach (var quote in Model)
                            {
                                var statusClass = quote.Status.ToString() switch
                                {
                                    "Pending" => "status-pending",
                                    "Accepted" => "status-accepted",
                                    "Rejected" => "status-rejected",
                                    "Expired" => "status-expired",
                                    _ => "status-pending"
                                };

                                <div class="quote-item">
                                    <div class="quote-item-header">
                                        <div>
                                            <h4 class="vehicle-name">
                                                <i class="fas fa-car"></i>
                                                @quote.VehicleModel
                                            </h4>
                                        </div>
                                        <span class="quote-status @statusClass">@quote.Status</span>
                                    </div>

                                    <div class="quote-details">
                                        <div class="detail-row">
                                            <i class="fas fa-calendar"></i>
                                            <span>Valid until: @(quote.ValidUntil?.ToString("MMM dd, yyyy") ?? "No expiry")</span>
                                        </div>
                                    </div>

                                    <div class="quote-actions">
                                        <a asp-action="Detail" asp-route-id="@quote.Id" class="action-btn action-btn-primary">
                                            <i class="fas fa-eye"></i> View
                                        </a>
                                        <a asp-action="Edit" asp-route-id="@quote.Id" class="action-btn action-btn-secondary">
                                            <i class="fas fa-edit"></i> Edit
                                        </a>
                                        <form asp-action="Delete" asp-route-id="@quote.Id" method="post" class="d-inline" style="flex: 1;">
                                            @Html.AntiForgeryToken()
                                            <button type="submit" class="action-btn action-btn-danger" style="width: 100%;" onclick="return confirm('Delete this quote?');">
                                                <i class="fas fa-trash"></i> Delete
                                            </button>
                                        </form>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                }
            </div>

            @if (Model.TotalPages > 1)
            {
                <nav style="margin-top: 2rem;">
                    <ul class="pagination" style="display: flex; gap: 0.5rem; list-style: none; padding: 0; justify-content: center;">
                        <li class="page-item @(Model.HasPrevious ? "" : "disabled")">
                            <a class="page-link" asp-action="Index" asp-route-page="@(Model.CurrentPage - 1)" asp-route-pageSize="@Model.PageSize" asp-route-searchTerm="@ViewBag.SearchTerm"
                               style="background: rgba(255,255,255,0.03); border: 1px solid rgba(255,255,255,0.08); color: #fff; padding: 0.5rem 1rem; border-radius: 6px; text-decoration: none; display: block;">
                                Previous
                            </a>
                        </li>
                        @for (int i = 1; i <= Model.TotalPages; i++)
                        {
                            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                <a class="page-link" asp-action="Index" asp-route-page="@i" asp-route-pageSize="@Model.PageSize" asp-route-searchTerm="@ViewBag.SearchTerm"
                                   style="background: @(i == Model.CurrentPage ? "#0070f3" : "rgba(255,255,255,0.03)"); border: 1px solid @(i == Model.CurrentPage ? "#0070f3" : "rgba(255,255,255,0.08)"); color: #fff; padding: 0.5rem 1rem; border-radius: 6px; text-decoration: none; display: block;">
                                    @i
                                </a>
                            </li>
                        }
                        <li class="page-item @(Model.HasNext ? "" : "disabled")">
                            <a class="page-link" asp-action="Index" asp-route-page="@(Model.CurrentPage + 1)" asp-route-pageSize="@Model.PageSize" asp-route-searchTerm="@ViewBag.SearchTerm"
                               style="background: rgba(255,255,255,0.03); border: 1px solid rgba(255,255,255,0.08); color: #fff; padding: 0.5rem 1rem; border-radius: 6px; text-decoration: none; display: block;">
                                Next
                            </a>
                        </li>
                    </ul>
                </nav>
            }
        }
        else
        {
            <div class="employee-card mt-3">
                <div class="empty-state">
                    <i class="fas fa-file-invoice"></i>
                    <h3>No Quotes Yet</h3>
                    <p>Create your first quote to get started.</p>
                    <a asp-action="Create" class="btn-modern">
                        <i class="fas fa-plus"></i> Create First Quote
                    </a>
                </div>
            </div>
        }
    </div>
</div>

<script>
    function toggleCustomerGroup(header) {
        const card = header.closest('.customer-group-card');
        card.classList.toggle('expanded');
    }
</script>
