@using Microsoft.AspNetCore.Mvc.RazorPages
@using Microsoft.AspNetCore.Mvc.Rendering
@using Microsoft.AspNetCore.Http
@model IEnumerable<EVDealerSales.Models.DTOs.TestDriveDTOs.TestDriveDto>

@{
    ViewBag.Title = "Test Drive List";
    var searchValue = Context.Request.Query["search"].ToString();
}
@{
    var customerNames = ViewBag.CustomerNames as Dictionary<Guid, string>;
    var vehicleNames = ViewBag.VehicleNames as Dictionary<Guid, string>;
}

<h2>Test Drive List</h2>

<form method="get">
    <input type="text" name="search" placeholder="Search by customer or vehicle" value="@searchValue" />
    <button type="submit" class="btn btn-secondary">Search</button>
</form>

<table class="table table-bordered mt-3">
    <thead>
        <tr>
            <th>Customer</th>
            <th>Vehicle</th>
            <th>Scheduled At</th>
            <th>Status</th>
            <th>Staff</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@(customerNames != null && customerNames.ContainsKey(item.CustomerId) ? customerNames[item.CustomerId] : item.CustomerId.ToString())</td>
                <td>@(vehicleNames != null && vehicleNames.ContainsKey(item.VehicleId) ? vehicleNames[item.VehicleId] : item.VehicleId.ToString())</td>
                <td>@item.ScheduledAt</td>
                <td>@item.Status</td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info btn-sm">Details</a>
                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning btn-sm">Edit</a>
                </td>
            </tr>
        }
    </tbody>
</table>