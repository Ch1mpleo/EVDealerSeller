@using EVDealerSales.BO.DTOs.OrderDTOs
@model IEnumerable<ListOrderDto>

@{
    ViewData["Title"] = "Orders";
}

<style>
    * {
        box-sizing: border-box;
    }

    body {
        background: #0a0a0a;
        color: #e5e5e5;
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
    }

    .orders-page {
        max-width: 1400px;
        margin: 0 auto;
        padding: 2rem 1.5rem;
    }

    .page-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 2rem;
        gap: 1rem;
        flex-wrap: wrap;
    }

    .page-title {
        font-size: 1.875rem;
        font-weight: 600;
        color: #fff;
        margin: 0;
    }

    .search-container {
        margin-bottom: 2rem;
    }

    .search-input {
        width: 100%;
        max-width: 500px;
        padding: 0.875rem 1rem;
        background: #141414;
        border: 1px solid #262626;
        border-radius: 8px;
        color: #fff;
        font-size: 0.9375rem;
        transition: all 0.2s;
    }

        .search-input:focus {
            outline: none;
            border-color: #3b82f6;
            background: #1a1a1a;
        }

        .search-input::placeholder {
            color: #737373;
        }

    .create-btn {
        padding: 0.75rem 1.5rem;
        background: #3b82f6;
        color: #fff;
        border: none;
        border-radius: 8px;
        font-weight: 500;
        font-size: 0.9375rem;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        transition: all 0.2s;
        cursor: pointer;
    }

        .create-btn:hover {
            background: #2563eb;
            color: #fff;
        }

    .orders-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(380px, 1fr));
        gap: 1.5rem;
    }

    @@media (max-width: 768px) {
        .orders-grid {
            grid-template-columns: 1fr;
        }
    }

    .customer-card {
        background: #141414;
        border: 1px solid #262626;
        border-radius: 12px;
        overflow: hidden;
        transition: all 0.2s;
    }

        .customer-card:hover {
            border-color: #404040;
        }

    .customer-header {
        padding: 1.25rem;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: space-between;
        gap: 1rem;
        transition: background 0.2s;
    }

        .customer-header:hover {
            background: #1a1a1a;
        }

        .customer-header.expanded {
            border-bottom: 1px solid #262626;
        }

    .customer-info {
        display: flex;
        align-items: center;
        gap: 0.875rem;
        flex: 1;
        min-width: 0;
    }

    .customer-avatar {
        width: 44px;
        height: 44px;
        border-radius: 8px;
        background: #3b82f6;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 600;
        font-size: 1rem;
        color: #fff;
        flex-shrink: 0;
    }

    .customer-details {
        flex: 1;
        min-width: 0;
    }

    .customer-name {
        font-size: 1rem;
        font-weight: 600;
        color: #fff;
        margin: 0 0 0.25rem 0;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .customer-stats {
        display: flex;
        align-items: center;
        gap: 0.75rem;
        font-size: 0.8125rem;
    }

    .stat-badge {
        color: #a3a3a3;
    }

    .stat-amount {
        color: #22c55e;
        font-weight: 500;
    }

    .expand-icon {
        color: #737373;
        font-size: 1rem;
        transition: transform 0.2s;
        flex-shrink: 0;
    }

    .customer-header.expanded .expand-icon {
        transform: rotate(180deg);
    }

    .orders-list {
        display: none;
    }

        .orders-list.show {
            display: block;
        }

    .order-item {
        padding: 1.25rem;
        border-top: 1px solid #262626;
    }

    .order-row {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        gap: 1rem;
        margin-bottom: 1rem;
    }

    .vehicle-name {
        font-size: 0.9375rem;
        font-weight: 600;
        color: #fff;
        margin: 0;
    }

    .status-badge {
        padding: 0.375rem 0.75rem;
        border-radius: 6px;
        font-size: 0.75rem;
        font-weight: 500;
        white-space: nowrap;
    }

        .status-badge.pending {
            background: rgba(234, 179, 8, 0.15);
            color: #eab308;
        }

        .status-badge.confirmed {
            background: rgba(59, 130, 246, 0.15);
            color: #3b82f6;
        }

        .status-badge.completed {
            background: rgba(34, 197, 94, 0.15);
            color: #22c55e;
        }

        .status-badge.cancelled {
            background: rgba(239, 68, 68, 0.15);
            color: #ef4444;
        }

    .order-details {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: 0.75rem;
        margin-bottom: 1rem;
    }

    .detail-item {
        display: flex;
        flex-direction: column;
        gap: 0.25rem;
    }

    .detail-label {
        font-size: 0.75rem;
        color: #737373;
        text-transform: uppercase;
        letter-spacing: 0.025em;
    }

    .detail-value {
        font-size: 0.875rem;
        color: #e5e5e5;
        font-weight: 500;
    }

        .detail-value.amount {
            color: #22c55e;
            font-weight: 600;
        }

    .order-actions {
        display: flex;
        gap: 0.5rem;
    }

    .btn {
        padding: 0.5rem 1rem;
        border-radius: 6px;
        font-size: 0.8125rem;
        font-weight: 500;
        text-decoration: none;
        border: none;
        cursor: pointer;
        transition: all 0.2s;
        display: inline-flex;
        align-items: center;
        gap: 0.375rem;
    }

    .btn-view {
        background: #262626;
        color: #e5e5e5;
        border: 1px solid #404040;
    }

        .btn-view:hover {
            background: #404040;
            color: #fff;
        }

    .btn-delete {
        background: rgba(239, 68, 68, 0.1);
        color: #ef4444;
        border: 1px solid rgba(239, 68, 68, 0.2);
    }

        .btn-delete:hover {
            background: rgba(239, 68, 68, 0.2);
        }

    .empty-state {
        text-align: center;
        padding: 4rem 2rem;
        color: #737373;
    }

    .empty-icon {
        font-size: 3rem;
        margin-bottom: 1rem;
        opacity: 0.3;
    }

    .empty-title {
        font-size: 1.25rem;
        color: #a3a3a3;
        margin: 0 0 0.5rem 0;
    }

    .empty-text {
        margin: 0;
        font-size: 0.9375rem;
    }
</style>

<div class="orders-page">
    <div class="page-header">
        <h1 class="page-title">Orders</h1>
        <a asp-action="Create" class="create-btn">
            <i class="fas fa-plus"></i>
            Create Order
        </a>
    </div>

    <div class="search-container">
        <input type="text" id="searchInput" class="search-input" placeholder="Search by customer, staff, or vehicle..." />
    </div>

    @if (!Model.Any())
    {
        <div class="empty-state">
            <div class="empty-icon">
                <i class="fas fa-shopping-cart"></i>
            </div>
            <h2 class="empty-title">No orders yet</h2>
            <p class="empty-text">Create your first order to get started</p>
        </div>
    }
    else
    {
        <div class="orders-grid" id="ordersContainer">
            @foreach (var order in Model.OrderByDescending(o => o.OrderDate))
            {
                <div class="customer-card" data-customer="@order.CustomerName.ToLower()" data-vehicle="@order.VehicleModel.ToLower()" data-staff="@order.StaffName.ToLower()">
                    <div class="customer-header">
                        <div class="customer-info">
                            <div class="customer-avatar">
                                @string.Join("", order.CustomerName.Split(' ').Select(n => n.FirstOrDefault())).ToUpper()
                            </div>
                            <div class="customer-details">
                                <h3 class="customer-name">@order.CustomerName</h3>
                                <div class="customer-stats">
                                    <span class="stat-badge">Order</span>
                                    <span class="stat-amount">$@order.TotalAmount.ToString("N0")</span>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="order-item">
                        <div class="order-row">
                            <h4 class="vehicle-name">@order.VehicleModel</h4>
                            <span class="status-badge @order.Status.ToString().ToLower()">
                                @order.Status
                            </span>
                        </div>

                        <div class="order-details">
                            <div class="detail-item">
                                <span class="detail-label">Staff</span>
                                <span class="detail-value">@order.StaffName</span>
                            </div>
                            <div class="detail-item">
                                <span class="detail-label">Date</span>
                                <span class="detail-value">@order.OrderDate.ToString("MMM dd, yyyy")</span>
                            </div>
                            <div class="detail-item">
                                <span class="detail-label">Total</span>
                                <span class="detail-value amount">$@order.TotalAmount.ToString("N0")</span>
                            </div>
                        </div>

                        <div class="order-actions">
                            <a asp-action="Detail" asp-route-id="@order.Id" class="btn btn-view">
                                <i class="fas fa-eye"></i> View
                            </a>
                            <form asp-action="Delete" asp-route-id="@order.Id" method="post" style="display: inline;"
                                  onsubmit="return confirm('Are you sure you want to delete this order?');">
                                @Html.AntiForgeryToken()
                                <button type="submit" class="btn btn-delete">
                                    <i class="fas fa-trash-alt"></i> Delete
                                </button>
                            </form>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

<script>
    document.getElementById('searchInput').addEventListener('input', function(e) {
        const searchTerm = e.target.value.toLowerCase();
        const orders = document.querySelectorAll('.customer-card');

        orders.forEach(order => {
            const customer = order.dataset.customer;
            const vehicle = order.dataset.vehicle;
            const staff = order.dataset.staff;
            const matches = customer.includes(searchTerm) || vehicle.includes(searchTerm) || staff.includes(searchTerm);

            order.style.display = matches ? 'block' : 'none';
        });
    });
</script>