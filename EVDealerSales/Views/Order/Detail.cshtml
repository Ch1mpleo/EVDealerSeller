@using EVDealerSales.BO.DTOs.OrderDTOs
@model OrderResponseDto

@{
    ViewData["Title"] = "Order Details";
}

<style>
    * {
        box-sizing: border-box;
    }

    body {
        background: #0a0a0a;
        color: #e5e5e5;
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
    }

    .detail-page {
        max-width: 1200px;
        margin: 0 auto;
        padding: 2rem 1.5rem;
    }

    .page-header {
        margin-bottom: 2rem;
    }

    .page-title {
        font-size: 1.875rem;
        font-weight: 600;
        color: #fff;
        margin: 0 0 0.5rem 0;
    }

    .page-subtitle {
        font-size: 0.9375rem;
        color: #737373;
        margin: 0;
    }

    .detail-layout {
        display: grid;
        grid-template-columns: 1fr 320px;
        gap: 1.5rem;
    }

    @@media (max-width: 991px) {
        .detail-layout {
            grid-template-columns: 1fr;
        }
    }

    .card {
        background: #141414;
        border: 1px solid #262626;
        border-radius: 12px;
        padding: 1.5rem;
        margin-bottom: 1.5rem;
    }

    .card-header {
        display: flex;
        align-items: center;
        gap: 0.75rem;
        margin-bottom: 1.5rem;
        padding-bottom: 1rem;
        border-bottom: 1px solid #262626;
    }

    .card-icon {
        width: 36px;
        height: 36px;
        border-radius: 8px;
        background: rgba(59, 130, 246, 0.15);
        display: flex;
        align-items: center;
        justify-content: center;
        color: #3b82f6;
        font-size: 0.875rem;
    }

    .card-title {
        font-size: 1.125rem;
        font-weight: 600;
        color: #fff;
        margin: 0;
    }

    .info-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 1.25rem;
    }

    .info-item {
        display: flex;
        flex-direction: column;
        gap: 0.375rem;
    }

    .info-label {
        font-size: 0.75rem;
        color: #737373;
        text-transform: uppercase;
        letter-spacing: 0.025em;
    }

    .info-value {
        font-size: 1rem;
        color: #e5e5e5;
        font-weight: 500;
    }

        .info-value.highlight {
            color: #3b82f6;
            font-weight: 600;
        }

        .info-value.amount {
            color: #22c55e;
            font-weight: 600;
        }

    .status-badge {
        display: inline-flex;
        align-items: center;
        padding: 0.5rem 1rem;
        border-radius: 6px;
        font-size: 0.875rem;
        font-weight: 500;
        width: fit-content;
    }

        .status-badge.pending {
            background: rgba(234, 179, 8, 0.15);
            color: #eab308;
        }

        .status-badge.confirmed {
            background: rgba(59, 130, 246, 0.15);
            color: #3b82f6;
        }

        .status-badge.completed {
            background: rgba(34, 197, 94, 0.15);
            color: #22c55e;
        }

        .status-badge.cancelled {
            background: rgba(239, 68, 68, 0.15);
            color: #ef4444;
        }

    .amounts-list {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    .amount-row {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .discount-note {
        margin-top: 1rem;
        padding: 1rem;
        background: #1a1a1a;
        border-radius: 8px;
        font-size: 0.875rem;
        color: #a3a3a3;
    }

        .discount-note strong {
            color: #e5e5e5;
        }

    .actions-card {
        position: sticky;
        top: 2rem;
    }

    .btn {
        width: 100%;
        padding: 0.875rem 1.25rem;
        border-radius: 8px;
        font-weight: 500;
        font-size: 0.9375rem;
        text-decoration: none;
        border: none;
        cursor: pointer;
        transition: all 0.2s;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
        margin-bottom: 0.75rem;
    }

    .btn-primary {
        background: #3b82f6;
        color: #fff;
    }

        .btn-primary:hover {
            background: #2563eb;
            color: #fff;
        }

    .btn-danger {
        background: rgba(239, 68, 68, 0.1);
        color: #ef4444;
        border: 1px solid rgba(239, 68, 68, 0.2);
    }

        .btn-danger:hover {
            background: rgba(239, 68, 68, 0.2);
        }
</style>

<div class="detail-page">
    <div class="page-header">
        <h1 class="page-title">Order Details</h1>
        <p class="page-subtitle">Complete order information</p>
    </div>

    <div class="detail-layout">
        <div class="main-content">
            <!-- Order Information -->
            <div class="card">
                <div class="card-header">
                    <div class="card-icon">
                        <i class="fas fa-file-invoice"></i>
                    </div>
                    <h2 class="card-title">Order Information</h2>
                </div>
                <div class="info-grid">
                    <div class="info-item">
                        <span class="info-label">Customer</span>
                        <span class="info-value highlight">@Model.CustomerName</span>
                    </div>
                    <div class="info-item">
                        <span class="info-label">Staff</span>
                        <span class="info-value">@Model.StaffName</span>
                    </div>
                    <div class="info-item">
                        <span class="info-label">Order Date</span>
                        <span class="info-value">@Model.OrderDate.ToString("MMMM dd, yyyy")</span>
                    </div>
                    <div class="info-item">
                        <span class="info-label">Status</span>
                        <span class="status-badge @Model.Status.ToString().ToLower()">@Model.Status</span>
                    </div>
                </div>
            </div>

            <!-- Discount -->
            @if (!string.IsNullOrWhiteSpace(Model.DiscountType) || Model.DiscountValue.HasValue)
            {
                <div class="card">
                    <div class="card-header">
                        <div class="card-icon">
                            <i class="fas fa-tag"></i>
                        </div>
                        <h2 class="card-title">Discount</h2>
                    </div>
                    <div class="info-grid">
                        @if (!string.IsNullOrWhiteSpace(Model.DiscountType))
                        {
                            <div class="info-item">
                                <span class="info-label">Type</span>
                                <span class="info-value">@Model.DiscountType</span>
                            </div>
                        }
                        @if (Model.DiscountValue.HasValue)
                        {
                            <div class="info-item">
                                <span class="info-label">Value</span>
                                <span class="info-value amount">$@Model.DiscountValue.Value.ToString("N0")</span>
                            </div>
                        }
                    </div>
                    @if (!string.IsNullOrWhiteSpace(Model.DiscountNote))
                    {
                        <div class="discount-note">
                            <strong>Note:</strong> @Model.DiscountNote
                        </div>
                    }
                </div>
            }

            <!-- Amounts -->
            <div class="card">
                <div class="card-header">
                    <div class="card-icon">
                        <i class="fas fa-dollar-sign"></i>
                    </div>
                    <h2 class="card-title">Amounts</h2>
                </div>
                <div class="amounts-list">
                    <div class="amount-row">
                        <span class="info-label">Subtotal</span>
                        <span class="info-value amount">$@Model.SubtotalAmount.ToString("N0")</span>
                    </div>
                    <div class="amount-row">
                        <span class="info-label">Total</span>
                        <span class="info-value amount">$@Model.TotalAmount.ToString("N0")</span>
                    </div>
                </div>
            </div>

            <!-- Item Details -->
            @if (Model.Items is not null)
            {
                <div class="card">
                    <div class="card-header">
                        <div class="card-icon">
                            <i class="fas fa-car"></i>
                        </div>
                        <h2 class="card-title">Item Details</h2>
                    </div>
                    <div class="info-grid">
                        <div class="info-item">
                            <span class="info-label">Vehicle</span>
                            <span class="info-value highlight">@Model.Items.Name</span>
                        </div>
                        <div class="info-item">
                            <span class="info-label">Quantity</span>
                            <span class="info-value">@Model.Items.Quantity</span>
                        </div>
                        <div class="info-item">
                            <span class="info-label">Unit Price</span>
                            <span class="info-value amount">$@Model.Items.UnitPrice.ToString("N0")</span>
                        </div>
                        <div class="info-item">
                            <span class="info-label">Line Total</span>
                            <span class="info-value amount">$@Model.Items.LineTotal.ToString("N0")</span>
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Sidebar Actions -->
        <div class="sidebar">
            <div class="card actions-card">
                <div class="card-header">
                    <div class="card-icon">
                        <i class="fas fa-cog"></i>
                    </div>
                    <h2 class="card-title">Actions</h2>
                </div>
                <a asp-action="Index" class="btn btn-primary">
                    <i class="fas fa-arrow-left"></i> Back to Orders
                </a>
                <form asp-action="Delete" asp-route-id="@Model.Id" method="post"
                      onsubmit="return confirm('Are you sure you want to delete this order?');">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger">
                        <i class="fas fa-trash"></i> Delete Order
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>