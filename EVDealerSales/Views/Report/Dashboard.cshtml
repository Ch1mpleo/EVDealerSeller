@{
    ViewBag.Title = "Manager Dashboard";
    Layout = "_Layout";
}

<style>
    .dashboard-container {
        min-height: 100vh;
        background: #0a0e27;
        padding: 2rem 1rem;
    }

    .dashboard-header {
        text-align: center;
        margin-bottom: 3rem;
        padding: 2rem 0;
    }

        .dashboard-header h1 {
            font-size: 2.5rem;
            font-weight: 700;
            color: #ffffff;
            margin-bottom: 0.5rem;
        }

        .dashboard-header p {
            color: #8b92b0;
            font-size: 1.1rem;
        }

    .chart-card {
        background: #1a1f3a;
        border-radius: 12px;
        padding: 2rem;
        margin-bottom: 2rem;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
        border: 1px solid #2a2f4a;
        transition: transform 0.2s ease;
    }

        .chart-card:hover {
            transform: translateY(-2px);
        }

    .chart-header {
        display: flex;
        align-items: center;
        gap: 1rem;
        margin-bottom: 1.5rem;
        padding-bottom: 1rem;
        border-bottom: 1px solid #2a2f4a;
    }

    .chart-icon {
        width: 48px;
        height: 48px;
        border-radius: 8px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.5rem;
        flex-shrink: 0;
        background: #252b4a;
        color: #00d4ff;
    }

    .chart-title {
        flex: 1;
    }

        .chart-title h4 {
            color: #ffffff;
            font-size: 1.3rem;
            font-weight: 600;
            margin: 0;
        }

        .chart-title p {
            color: #8b92b0;
            font-size: 0.9rem;
            margin: 0.25rem 0 0 0;
        }

    .chart-body {
        position: relative;
        min-height: 300px;
    }

    .year-selector {
        display: flex;
        align-items: center;
        gap: 1rem;
        margin-bottom: 1.5rem;
        padding: 1rem;
        background: #252b4a;
        border-radius: 8px;
        border: 1px solid #2a2f4a;
    }

        .year-selector label {
            color: #ffffff;
            font-weight: 500;
            margin: 0;
            white-space: nowrap;
        }

        .year-selector input {
            flex: 1;
            max-width: 150px;
            padding: 0.5rem 1rem;
            background: #1a1f3a;
            border: 1px solid #2a2f4a;
            border-radius: 6px;
            color: #ffffff;
            font-size: 1rem;
            transition: border-color 0.2s ease;
        }

            .year-selector input:focus {
                outline: none;
                border-color: #00d4ff;
            }

        .year-selector button {
            padding: 0.5rem 1.5rem;
            background: #00d4ff;
            border: none;
            border-radius: 6px;
            color: #0a0e27;
            font-weight: 600;
            cursor: pointer;
            transition: opacity 0.2s ease;
            white-space: nowrap;
        }

            .year-selector button:hover {
                opacity: 0.9;
            }

    .error-message {
        padding: 1rem;
        background: rgba(239, 68, 68, 0.1);
        border: 1px solid rgba(239, 68, 68, 0.3);
        border-radius: 8px;
        color: #ef4444;
        margin-top: 1rem;
    }

    .loading-spinner {
        display: flex;
        align-items: center;
        justify-content: center;
        min-height: 300px;
        color: #00d4ff;
        font-size: 1.2rem;
    }

    @@media (max-width: 768px) {
        .dashboard-header h1 {
            font-size: 2rem;
        }

        .chart-card {
            padding: 1.5rem;
        }

        .chart-header {
            flex-direction: column;
            align-items: flex-start;
        }

        .year-selector {
            flex-direction: column;
            align-items: stretch;
        }

            .year-selector input,
            .year-selector button {
                max-width: 100%;
            }
    }
</style>

<div class="dashboard-container">
    <div class="container">
        <div class="dashboard-header">
            <h1>Manager Dashboard</h1>
            <p>Comprehensive analytics and performance metrics</p>
        </div>

        <div class="row">
            <div class="col-12">
                <div class="chart-card">
                    <div class="chart-header">
                        <div class="chart-icon">
                            <i class="fas fa-car"></i>
                        </div>
                        <div class="chart-title">
                            <h4>Test Drives by Vehicle Model</h4>
                            <p>Number of test drives per vehicle model</p>
                        </div>
                    </div>
                    <div class="chart-body">
                        <canvas id="testDriveByModelChart"></canvas>
                    </div>
                </div>
            </div>

            <div class="col-12">
                <div class="chart-card">
                    <div class="chart-header">
                        <div class="chart-icon">
                            <i class="fas fa-dollar-sign"></i>
                        </div>
                        <div class="chart-title">
                            <h4>Revenue by Sales Staff</h4>
                            <p>Total revenue generated by each sales representative</p>
                        </div>
                    </div>
                    <div class="chart-body">
                        <canvas id="incomeByStaffChart"></canvas>
                    </div>
                </div>
            </div>

            <div class="col-12">
                <div class="chart-card">
                    <div class="chart-header">
                        <div class="chart-icon">
                            <i class="fas fa-chart-line"></i>
                        </div>
                        <div class="chart-title">
                            <h4>Monthly Income Trend</h4>
                            <p>Revenue performance throughout the year</p>
                        </div>
                    </div>
                    <div class="chart-body">
                        <form id="yearForm" class="year-selector">
                            <label for="yearInput">
                                <i class="fas fa-calendar-alt"></i> Select Year:
                            </label>
                            <input type="number" id="yearInput" value="@DateTime.Now.Year" min="2000" max="2100" />
                            <button type="submit">
                                <i class="fas fa-search"></i> View Data
                            </button>
                        </form>
                        <canvas id="monthlyIncomeChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        const chartOptions = {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: {
                    position: 'top',
                    labels: {
                        color: '#ffffff',
                        font: {
                            size: 12,
                            weight: '500'
                        },
                        padding: 15
                    }
                },
                tooltip: {
                    backgroundColor: 'rgba(26, 31, 58, 0.95)',
                    titleColor: '#ffffff',
                    bodyColor: '#ffffff',
                    borderColor: '#2a2f4a',
                    borderWidth: 1,
                    padding: 12,
                    displayColors: true,
                    callbacks: {
                        label: function(context) {
                            let label = context.dataset.label || '';
                            if (label) {
                                label += ': ';
                            }
                            if (context.parsed.y !== null) {
                                label += '$' + context.parsed.y.toLocaleString();
                            } else if (context.parsed.x !== null) {
                                label += '$' + context.parsed.x.toLocaleString();
                            } else {
                                label += context.parsed;
                            }
                            return label;
                        }
                    }
                }
            },
            scales: {
                x: {
                    grid: {
                        color: 'rgba(139, 146, 176, 0.1)',
                        drawBorder: false
                    },
                    ticks: {
                        color: '#8b92b0',
                        font: {
                            size: 11
                        }
                    }
                },
                y: {
                    grid: {
                        color: 'rgba(139, 146, 176, 0.1)',
                        drawBorder: false
                    },
                    ticks: {
                        color: '#8b92b0',
                        font: {
                            size: 11
                        },
                        callback: function(value) {
                            return '$' + value.toLocaleString();
                        }
                    }
                }
            }
        };

        fetch('@Url.Action("TestDriveByModel", "Report")')
            .then(res => {
                if (!res.ok) throw new Error('Network response was not ok');
                return res.json();
            })
            .then(data => {
                const labels = data.map(x => x.modelName + ' (' + x.modelYear + ')');
                const values = data.map(x => x.testDriveCount);

                const ctx = document.getElementById('testDriveByModelChart').getContext('2d');

                new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: labels,
                        datasets: [{
                            label: 'Test Drive Count',
                            data: values,
                            backgroundColor: 'rgba(0, 212, 255, 0.6)',
                            borderColor: '#00d4ff',
                            borderWidth: 1,
                            borderRadius: 6
                        }]
                    },
                    options: {
                        ...chartOptions,
                        plugins: {
                            ...chartOptions.plugins,
                            tooltip: {
                                ...chartOptions.plugins.tooltip,
                                callbacks: {
                                    label: function(context) {
                                        return 'Test Drives: ' + context.parsed.y;
                                    }
                                }
                            }
                        }
                    }
                });
            })
            .catch(error => {
                console.error('Error loading test drive data:', error);
                document.getElementById('testDriveByModelChart').insertAdjacentHTML('afterend',
                    '<div class="error-message"><i class="fas fa-exclamation-circle"></i> Unable to load test drive data</div>');
            });

        fetch('@Url.Action("IncomeByStaff", "Report")')
            .then(res => {
                if (!res.ok) throw new Error('Network response was not ok');
                return res.json();
            })
            .then(data => {
                const labels = data.map(x => x.staffName);
                const values = data.map(x => x.totalIncome);

                const ctx = document.getElementById('incomeByStaffChart').getContext('2d');

                new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: labels,
                        datasets: [{
                            label: 'Total Revenue',
                            data: values,
                            backgroundColor: 'rgba(0, 212, 255, 0.6)',
                            borderColor: '#00d4ff',
                            borderWidth: 1,
                            borderRadius: 6
                        }]
                    },
                    options: {
                        ...chartOptions,
                        indexAxis: 'y'
                    }
                });
            })
            .catch(error => {
                console.error('Error loading staff income data:', error);
                document.getElementById('incomeByStaffChart').insertAdjacentHTML('afterend',
                    '<div class="error-message"><i class="fas fa-exclamation-circle"></i> Unable to load revenue data</div>');
            });

        function loadMonthlyIncome(year) {
            fetch('@Url.Action("MonthlyIncome", "Report")' + '?year=' + year)
                .then(res => {
                    if (!res.ok) throw new Error('Network response was not ok');
                    return res.json();
                })
                .then(data => {
                    const labels = data.map(x => 'Month ' + x.month);
                    const values = data.map(x => x.totalIncome);

                    if (window.monthlyIncomeChart) window.monthlyIncomeChart.destroy();

                    const ctx = document.getElementById('monthlyIncomeChart').getContext('2d');

                    window.monthlyIncomeChart = new Chart(ctx, {
                        type: 'line',
                        data: {
                            labels: labels,
                            datasets: [{
                                label: 'Monthly Income',
                                data: values,
                                fill: true,
                                backgroundColor: 'rgba(0, 212, 255, 0.1)',
                                borderColor: '#00d4ff',
                                borderWidth: 2,
                                tension: 0.4,
                                pointBackgroundColor: '#00d4ff',
                                pointBorderColor: '#ffffff',
                                pointBorderWidth: 2,
                                pointRadius: 4,
                                pointHoverRadius: 6
                            }]
                        },
                        options: chartOptions
                    });
                })
                .catch(error => {
                    console.error('Error loading monthly income data:', error);
                    document.getElementById('monthlyIncomeChart').insertAdjacentHTML('afterend',
                        '<div class="error-message"><i class="fas fa-exclamation-circle"></i> Unable to load monthly income data</div>');
                });
        }

        // Load default data for current year
        loadMonthlyIncome(document.getElementById('yearInput').value);

        // Handle form submission
        document.getElementById('yearForm').addEventListener('submit', function (e) {
            e.preventDefault();
            const year = document.getElementById('yearInput').value;
            loadMonthlyIncome(year);
        });
    </script>
}
